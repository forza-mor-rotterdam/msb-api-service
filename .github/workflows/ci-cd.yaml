name: "CI/CD Workflow"

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-docker-image:
    name: Build and push Docker image
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get current date
        id: get_date
        run: echo "::set-output name=DATE::$(date +'%d-%m-%Y-%H-%M-%S')"

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_app
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app
          tags: |
            type=raw,develop
            type=raw,test

      - name: Build and push app Docker image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:api"
          push: true
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}
          build-args: |
            GIT_SHA=${{ github.sha }}
            DEPLOY_DATE=${{ steps.get_date.outputs.DATE }}

  deploy-acc:
    name: Acceptance release
    if: github.ref == 'refs/heads/develop'
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    environment: acc
    permissions:
      contents: read
      packages: write
    steps:
      - name: Start rollout on k8s platform
        uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ vars.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ vars.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: rollout restart deployment/app --namespace=${{ vars.KUBE_NAMESPACE }}

      - name: Status rollout on k8s platform
        uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ vars.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ vars.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: rollout status deployment/app --namespace=${{ vars.KUBE_NAMESPACE }}

  deploy-test:
    name: Test release
    if: github.ref == 'refs/heads/develop'
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    environment: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Start rollout on k8s platform
        uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ vars.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ vars.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: rollout restart deployment/app deployment/worker --namespace=${{ vars.KUBE_NAMESPACE }}

      - name: Status rollout on k8s platform
        uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ vars.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ vars.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: rollout status deployment/app --namespace=${{ vars.KUBE_NAMESPACE }}
